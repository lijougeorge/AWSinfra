name: Terraform Deployment with Security & Compliance

on:
  workflow_dispatch:
    inputs:
      account_id:
        description: 'AWS Account ID'
        required: true
        type: string
      action:
        description: 'Action to perform (plan/apply/destroy)'
        required: true
        type: string
        default: 'plan'
      resource_type:
        description: 'Select resource type (e.g., EC2, S3)'
        required: true
        type: string

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        environment: [production]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (OIDC)
        id: aws-auth
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ github.event.inputs.account_id }}:role/TerraformExecutionRole
          aws-region: us-east-1

      - name: Verify AWS Authentication
        run: |
          echo -e "\033[1;36mVerifying AWS Authentication...\033[0m"
          aws sts get-caller-identity

      - name: Install Dependencies
        run: |
          set -e
          echo -e "\033[1;32mInstalling system dependencies...\033[0m"
          sudo apt-get update -y && sudo apt-get install -y jq unzip
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform -y
          echo -e "\033[1;33mTerraform Version:\033[0m"
          terraform version || (echo -e "\033[1;31mTerraform installation failed!\033[0m" && exit 1)

      - name: Install Checkov for Security Scanning
        run: |
          echo -e "\033[1;35mInstalling Checkov...\033[0m"
          pip install checkov

      - name: Run Security Scan with Checkov
        id: security-scan
        run: |
          echo -e "\033[1;33mRunning Terraform security scan...\033[0m"
          checkov -d . --framework terraform --soft-fail || echo -e "\033[1;31mCheckov found issues, review the logs.\033[0m"
          checkov -d . --framework terraform --output json > checkov_results.json || true
          
          PASSED=$(jq '.results.passed_checks | length' checkov_results.json)
          FAILED=$(jq '.results.failed_checks | length' checkov_results.json)
          SKIPPED=$(jq '.results.skipped_checks | length' checkov_results.json)

          echo "PASSED_COUNT=$PASSED" >> $GITHUB_ENV
          echo "FAILED_COUNT=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED_COUNT=$SKIPPED" >> $GITHUB_ENV

      - name: Load Terraform Variables
        id: tfvars
        run: |
          echo -e "\033[1;34mReading terraform.tfvars.json...\033[0m"
          for key in $(jq -r 'keys[]' terraform.tfvars.json); do
            value=$(jq -c -r ".$key" terraform.tfvars.json)
            echo "TF_VAR_$key=$value" >> $GITHUB_ENV
          done

      - name: Initialize Terraform
        run: |
          echo -e "\033[1;32mInitializing Terraform...\033[0m"
          terraform init || (echo -e "\033[1;31mTerraform initialization failed!\033[0m" && exit 1)
          echo -e "\033[1;33mValidating Terraform files...\033[0m"
          terraform validate || (echo -e "\033[1;31mValidation Failed!\033[0m" && exit 1)

      - name: Terraform Format Check
        run: |
          echo -e "\033[1;36mChecking Terraform formatting...\033[0m"
          terraform fmt -recursive || (echo -e "\033[1;33mFormatting issues detected! Run 'terraform fmt' locally.\033[0m" && exit 1)

      - name: Run Terraform Action (Plan/Apply/Destroy)
        run: |
          echo -e "\033[1;35mRunning Terraform Action: ${{ github.event.inputs.action }}...\033[0m"
          chmod +x script.sh
          ./script.sh ${{ github.event.inputs.action }} ${{ github.event.inputs.resource_type }}

      - name: Lock Terraform State
        run: |
          echo -e "\033[1;34mLocking Terraform state to prevent conflicts...\033[0m"
          terraform state pull > terraform-state-backup.json
          echo -e "\033[1;32mTerraform state is safely locked.\033[0m"

      - name: Post Deployment Summary
        run: |
          echo -e "\033[1;32mTerraform Deployment Completed Successfully!\033[0m"

      - name: Generate Summary Table
        run: |
          echo -e "\033[1;36mDeployment Summary:\033[0m"
          echo -e "\033[1;32m----------------------------------------------------\033[0m"
          echo -e "\033[1;32m| Security Scan               |\033[0m"
          echo -e "\033[1;32m----------------------------------------------------\033[0m"
          echo -e "\033[1;32m| Passed Count: $PASSED_COUNT  |\033[0m"
          echo -e "\033[1;31m| Failed Count: $FAILED_COUNT  |\033[0m"
          echo -e "\033[1;33m| Skipped Count: $SKIPPED_COUNT  |\033[0m"
          echo -e "\033[1;32m----------------------------------------------------\033[0m"
